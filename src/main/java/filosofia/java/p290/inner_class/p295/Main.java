package filosofia.java.p290.inner_class.p295;
/* Создайте интерфейс, содержащий хотя бы один метод в одном пакете.
*  Создайте класс в другом пакете.
* Добавьте защищенный внутренний класс, реализующий интерфейс.
* В третьем пакете создайте производный класс, внутри метода верните объект
* защищенного внутреннего класса, преобразованный в интерфейс.
*
* Создайте класс, содержащий закрытое поле и закрытый метод.
* Создайте внутренний класс с методом, который изменяет поле внешнего класса
* и вызывает его метод.
* Во втором методе внутреннего класса создайте объект внутреннего класса и
* вызовите его метод. Продемонстрируйте эффект на объекте внешнего класса.
*
* Проверьте, доступны ли для внешнего класса закрытые элементы внутреннего класса.
 */
public class Main {
    public static void main(String[] args) {
        PrivateField p = new PrivateField();
        p.workingInnerClass();
        p.workingInnerClass();
        p.workingInnerClass();
        p.changeInnerPrivateField(" Привет");
    }
}
